<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   


<mapper namespace="com.admin.entity.OauthUsers">
      <!-- 自动生成id策略 -->
    <insert id="add" parameterType="com.admin.entity.OauthUsers" useGeneratedKeys="true" keyProperty="id">  
       	INSERT INTO oauth_users 
       	( username, password, enabled) 
       	VALUES
       	( #{username}, #{password}, #{enabled})
    </insert>  
	
	<delete id="del" parameterType="com.admin.entity.OauthUsers">
		DELETE FROM oauth_users
		 WHERE username = #{username}  	  
	</delete>
	
	<update id="upd" parameterType="com.admin.entity.OauthUsers">
		UPDATE oauth_users SET
	           password = #{password}, 
	           enabled = #{enabled} 
         WHERE username = #{username}  	        
	</update>
  	
	<resultMap type="com.admin.entity.OauthUsers" id="result">
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="enabled" column="enabled"/>
	</resultMap>
  	
	<sql id="columns">
		t.username, t.password, t.enabled 
	</sql>
	
	<sql id="order">
		<choose>
			<when test="@chok.devwork.Ognl@isNotEmpty(sort)">
				ORDER BY tt.<include refid="orderParse1"/> ${order}
			</when>
			<when test="@chok.devwork.Ognl@isNotEmpty(multiSort) and @chok.devwork.Ognl@isEmpty(sort)">
				ORDER BY <foreach collection="multiSort" index="index" item="item" separator=",">tt.<include refid="orderParse2" /> ${item.sortOrder}</foreach>  
			</when>
		</choose>
	</sql>
	<sql id="orderParse1">
		<if test="sort == 'username'">username</if>
		<if test="sort == 'password'">password</if>
		<if test="sort == 'enabled'">enabled</if>
	</sql>
	<sql id="orderParse2">
		<if test="item.sortName == 'username'">username</if>
		<if test="item.sortName == 'password'">password</if>
		<if test="item.sortName == 'enabled'">enabled</if>
	</sql>
	
	<sql id="page">
		<if test="@chok.devwork.Ognl@isNotEmpty(offset) and @chok.devwork.Ognl@isNotEmpty(limit)"> LIMIT #{offset,javaType=String,jdbcType=NUMERIC}, #{limit,javaType=String,jdbcType=NUMERIC} </if>
	</sql>
	
	<sql id="dynamicWhere">
		<where>	      				
	       <if test="@chok.devwork.Ognl@isNotEmpty(username)"> AND t.username = #{username}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(password)"> AND t.password = #{password}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(enabled)"> AND t.enabled = #{enabled}</if>
	       <if test="@chok.devwork.Ognl@isNotEmpty(search)"> AND (t.password LIKE CONCAT('%',#{search},'%') OR t.enabled LIKE CONCAT('%',#{search},'%'))</if>	
		</where>
	</sql>	
	
	<select id="get" resultMap="result">
		SELECT <include refid="columns"/> 
		  FROM oauth_users t 
		 WHERE username = #{username}  	  
	</select>
	
	<select id="query" resultType="list" resultMap="result">
		SELECT tt.* FROM 
		(
			SELECT <include refid="columns"/> FROM oauth_users t
			<include refid="dynamicWhere" />
		) tt
		<include refid="order" />
		<include refid="page" />
	</select>
	
	<select id="getCount" resultType="int">
		SELECT COUNT(1) FROM oauth_users t
		<include refid="dynamicWhere" />
	</select>
</mapper>  
